{"openapi": "3.1.0", "info": {"title": "Auth API", "description": "CRUD", "version": "0.1.0"}, "paths": {"/v1/auth/": {"get": {"tags": ["auth"], "summary": "Root", "description": "Empty endpoint. This is used for testing.", "operationId": "root_v1_auth__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/auth/manual/signup": {"post": {"tags": ["auth"], "summary": "Post Sign Up", "description": "If username is not provided, generates username.", "operationId": "post_sign_up_v1_auth_manual_signup_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthSignupPost"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/auth/manual/login": {"post": {"tags": ["auth"], "summary": "Post Login", "description": "Login user via username and password. Returns all tokens.", "operationId": "post_login_v1_auth_manual_login_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthLoginPost"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/auth/manual/refresh": {"post": {"tags": ["auth"], "summary": "Post Refresh", "description": "Refresh user tokens. Will require id token in header.", "operationId": "post_refresh_v1_auth_manual_refresh_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthRefreshPost"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/auth/manual/logout": {"post": {"tags": ["auth"], "summary": "Noflow Global Logout", "description": "Global logout. Revokes all tokens. Requires id token in header.", "operationId": "noflow_global_logout_v1_auth_manual_logout_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthLogoutPost"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"AuthToken": []}]}}, "/v1/ab/": {"get": {"tags": ["ab"], "summary": "Root", "description": "Empty endpoint. This is used for testing.", "operationId": "root_v1_ab__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/ab/tests/": {"get": {"tags": ["ab"], "summary": "Get Ab Tests", "description": "Get all AB Tests", "operationId": "get_ab_tests_v1_ab_tests__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"AuthToken": []}]}, "post": {"tags": ["ab"], "summary": "Create Ab Test", "description": "Creates a new test using name and data.", "operationId": "create_ab_test_v1_ab_tests__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTestRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"AuthToken": []}]}}, "/v1/ab/tests/{test_id}": {"get": {"tags": ["ab"], "summary": "Get Ab Test", "description": "Get AB Test", "operationId": "get_ab_test_v1_ab_tests__test_id__get", "security": [{"AuthToken": []}], "parameters": [{"name": "test_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Test Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["ab"], "summary": "Update Ab Test", "description": "Update AB Test", "operationId": "update_ab_test_v1_ab_tests__test_id__put", "security": [{"AuthToken": []}], "parameters": [{"name": "test_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Test Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateTestRequest"}}}}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["ab"], "summary": "Delete Ab Test", "description": "Delete AB Test", "operationId": "delete_ab_test_v1_ab_tests__test_id__delete", "security": [{"AuthToken": []}], "parameters": [{"name": "test_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Test Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"summary": "Home", "description": "General API information.", "operationId": "home__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"AuthLoginPost": {"properties": {"email": {"type": "string", "title": "Email"}, "password": {"type": "string", "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "AuthLoginPost"}, "AuthLogoutPost": {"properties": {"access_token": {"type": "string", "title": "Access Token"}}, "type": "object", "required": ["access_token"], "title": "AuthLogoutPost"}, "AuthRefreshPost": {"properties": {"refresh_token": {"type": "string", "title": "Refresh Token"}}, "type": "object", "required": ["refresh_token"], "title": "AuthRefreshPost"}, "AuthSignupPost": {"properties": {"email": {"type": "string", "title": "Email"}, "confirm_email": {"type": "string", "title": "Confirm Email"}, "password": {"type": "string", "title": "Password"}, "confirm_password": {"type": "string", "title": "Confirm Password"}}, "type": "object", "required": ["email", "confirm_email", "password", "confirm_password"], "title": "AuthSignupPost"}, "CreateTestRequest": {"properties": {"title": {"type": "string", "title": "Title"}, "data": {"type": "string", "title": "Data"}}, "type": "object", "required": ["title", "data"], "title": "CreateTestRequest", "description": "Schema for POST create test."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "TokenResponse": {"properties": {"id_token": {"type": "string", "title": "Id Token", "description": "Used to access user resources."}, "access_token": {"type": "string", "title": "Access Token", "description": "Used to access user auth endpoints like logout."}, "refresh_token": {"type": "string", "title": "Refresh Token", "description": "Used to refresh the other tokens."}, "expires_in": {"type": "integer", "title": "Expires In", "description": "Seconds until id and access tokens expire."}, "token_type": {"type": "string", "title": "Token Type", "default": "Bearer"}, "is_subscribed": {"type": "boolean", "title": "Is Subscribed", "description": "Whether the user paid or not."}, "is_admin": {"type": "boolean", "title": "Is Admin", "description": "Whether the user is an admin or not."}}, "type": "object", "required": ["id_token", "access_token", "refresh_token", "expires_in", "is_subscribed", "is_admin"], "title": "TokenResponse"}, "UpdateTestRequest": {"properties": {"title": {"type": "string", "title": "Title"}, "data": {"type": "string", "title": "Data"}, "is_live": {"type": "boolean", "title": "Is Live"}}, "type": "object", "required": ["title", "data", "is_live"], "title": "UpdateTestRequest", "description": "Schema for PUT update test."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"AuthToken": {"type": "http", "scheme": "bearer"}}}}